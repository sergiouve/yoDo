#!/usr/bin/env python
#YODO 0.0.1

# # # # # # # # # # # # # # # # # # # # #
#	TODO
#	-? Import modules according to what is needed
#	-! Complete implementation of wakeme
#	-! OOP
#	-! Iterate through routes to sys.path.insert
#	-! Dynamic routes for sys.path.insert
# # # # # # # # # # # # # # # # # # # # #

import os, sys, argparse, json

sys.path.insert(0, '/home/sergiouve/Desarrollo/yoDo/libs')
sys.path.insert(0, '/home/sergiouve/Desarrollo/yoDo/modules')

from yoDo import Yodo

dev = True
current_dir = os.getcwd()
ver = '0.0.1'

if dev:
	import pprint
	print '--------------'
	print 'Dev stuff, nevermind...'
	print 'yoDo ver: \t\t' + ver
	print 'Sys: \t\t' + sys.platform
	sys.stdout.write('Args: \t\t')
	for arg in sys.argv:
		sys.stdout.write(arg)
	print
	print '--------------'

def main():
	yodo = Yodo()
	yodo.say_hello()

# def main():
# 	load_settings()
# 	parser = argparse.ArgumentParser(description='yoDo')
# 	parser.add_argument('action', nargs = '?', default=None)
# 	parser.add_argument('opt1', nargs = '?', default = None)
# 	parser.add_argument('opt2', nargs = '?', default = None)
# 	parser.add_argument('flags', nargs = '*', default = None)
#
# 	args = parser.parse_args()
# 	action = args.action
# 	foption = args.opt1
# 	soption = args.opt2
# 	flags = args.flags
#
# 	if action == 'wakeme':
# 		wakeme()
# 	elif action == 'list':
# 		list_modules(options)
# 	else:
# 		print 'My name is yoDo'

if __name__ == '__main__':
	main()